# This file is autogenerated by maturin v1.8.3
# To update, run
#
#    maturin generate-ci github --platform macos manylinux windows
#
name: build_release

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

env:
  REL_VERSION: ${{ github.event.release.tag_name }}
  REL_REPO: ${{ github.event.repository.name }}

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, windows, macos]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'
      # Linux Arm
      - name: Download Linux aarch64 artifact          
        uses: actions/download-artifact@v4
        with:
          name: wheels-linux-aarch64
          path: artifacts/linux/aarch64  
      - name: Zip artifact
        run: |
          echo "${{env.REL_REPO}}-${{env.REL_VERSION}}-linux-aarch64" 
          cd artifacts/linux/aarch64
          zip -r ${{env.REL_REPO}}-${{env.REL_VERSION}}-linux-aarch64.zip .
      - name: upload linux artifact aarcg64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: artifacts/linux/aarch64/${{env.REL_REPO}}-${{env.REL_VERSION}}-linux-aarch64.zip
          asset_name: ${{env.REL_REPO}}-${{env.REL_VERSION}}-linux-aarch64.zip
          asset_content_type: application/zip
      # Linux intel
      - name: Download Linux x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: wheels-linux-x86_64
          path: artifacts/linux/x86_64
      - name: Zip artifact
        run: |
          echo "${{env.REL_REPO}}-${{env.REL_VERSION}}-linux-x86_64" 
          cd artifacts/linux/x86_64
          zip -r ${{env.REL_REPO}}-${{env.REL_VERSION}}-linux-x86_64.zip . 
      - name: upload linux artifact x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: artifacts/linux/x86_64/${{env.REL_REPO}}-${{env.REL_VERSION}}-linux-x86_64.zip
          asset_name: ${{env.REL_REPO}}-${{env.REL_VERSION}}-linux-x86_64.zip
          asset_content_type: application/zip

      # macos ARM
      - name: Download macos aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: wheels-macos-aarch64
          path: artifacts/macos/aarch64
      - name: Zip artifact
        run: |
          echo "${{env.REL_REPO}}-${{env.REL_VERSION}}-macos-aarch64" 
          cd artifacts/macos/aarch64
          zip -r ${{env.REL_REPO}}-${{env.REL_VERSION}}-macos-aarch64.zip . 
      - name: upload darwin artifact aarch64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: artifacts/macos/aarch64/${{env.REL_REPO}}-${{env.REL_VERSION}}-macos-aarch64.zip
          asset_name: ${{env.REL_REPO}}-${{env.REL_VERSION}}-macos-aarch64.zip
          asset_content_type: application/zip
      # macos intel
      - name: Download macos x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: wheels-macos-x86_64
          path: artifacts/macos/x86_64
      - name: Zip artifact
        run: |
          echo "${{env.REL_REPO}}-${{env.REL_VERSION}}-macos-x86_64"
          cd artifacts/macos/x86_64
          zip -r ${{env.REL_REPO}}-${{env.REL_VERSION}}-macos-x86_64.zip . 
      - name: upload darwin artifact x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: artifacts/macos/x86_64/${{env.REL_REPO}}-${{env.REL_VERSION}}-macos-x86_64.zip
          asset_name: ${{env.REL_REPO}}-${{env.REL_VERSION}}-macos-x86_64.zip
          asset_content_type: application/zip

      # Windows intel
      - name: Download win x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: wheels-windows-x64
          path: artifacts/win/x64
      - name: Zip artifact
        run: |
          echo "${{env.REL_REPO}}-${{env.REL_VERSION}}-windows-x86_64"
          cd artifacts/win/x64
          zip -r ${{env.REL_REPO}}-${{env.REL_VERSION}}-windows-x64.zip . 
            
      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: artifacts/win/x64/${{env.REL_REPO}}-${{env.REL_VERSION}}-windows-x64.zip
          asset_name: ${{env.REL_REPO}}-${{env.REL_VERSION}}-windows-x64.zip
          asset_content_type: application/zip